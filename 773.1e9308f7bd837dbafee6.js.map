{"version":3,"file":"773.1e9308f7bd837dbafee6.js","mappings":"uKACA,EAAuE,mBAAvE,EAA0G,uBAA1G,EAA+I,qB,mBCDhI,SAAS,EAACA,GAAY,MAC7BC,EAC0B,QADpB,EAAGC,SACZC,uBAAuBH,GAAI,UAAE,aADjB,EAEXI,wBACJ,OAAOH,GAAUA,CACnB,C,w7CCKA,IAuEA,EAvEc,WACZ,I,IAAcI,EAAcC,EAAAA,EAAAA,mBAA4B,MAAhDC,KAEFC,EAAUH,aAAS,EAATA,EAAWI,QACzB,SAACC,EAAmBC,GAAI,OACtBD,EAAQE,SAASD,EAAKE,QAAUH,EAAU,GAAH,SAAOA,GAAO,CAAEC,EAAKE,QAAO,GACrE,IAEYC,EAAUC,EAAAA,EAAAA,uBAAgCP,GAAhDD,KAEuC,G,GAArBS,EAAAA,EAAAA,UAAkB,I,EAAG,E,miBAAxCC,EAAK,KAAEC,EAAQ,KAElBC,EAAmBC,EAAiBC,GACpCC,EAAgBF,EAAiBC,GAWrC,SAASE,EAAcvB,GACrB,IAAMwB,EAAW,EAAIP,GACrBO,EAASxB,EAAK,GAAK,EAAH,KACXwB,EAASxB,EAAK,IAAE,IACnByB,WAAYD,EAASxB,EAAK,GAAGyB,YAE/BP,EAASM,EACX,CAEA,OAlBAE,EAAAA,EAAAA,YAAU,WACRrB,GAAaa,EAASb,EACxB,GAAG,CAACA,KAEJqB,EAAAA,EAAAA,YAAU,WACRP,EAAmBC,EAAiBC,GACpCC,EAAgBF,EAAiBC,EACnC,GAAG,KAYD,iBAAKM,UF3CyB,yBE2CU,WACtC,iBAAKA,UAAWN,EAAsB,WACpC,SAAC,UAAgB,CAACO,MAAO,EAAGD,UAAWN,EAAoB,2BAG1DJ,aAAK,EAALA,EACGY,QAAO,YAAY,SAATJ,SAA0B,IACrCK,KAAI,SAACnB,GAAI,OACR,SAAC,KAAQ,CACPoB,YAAaR,EACbS,kBAAmBV,EAEnBX,KAAMA,EACNsB,KAAMnB,aAAK,EAALA,EAAOoB,MAAK,SAACD,GAAI,OAAKA,EAAKjC,KAAOW,EAAKE,MAAM,KAF9CF,EAAKX,GAGV,QAGR,iBAAK2B,UAAWN,EAAkB,WAChC,SAAC,UAAgB,CAACO,MAAO,EAAGD,UAAWN,EAAoB,uBAG1DJ,aAAK,EAALA,EACGY,QAAO,YAAY,SAATJ,SAAyB,IACpCK,KAAI,SAACnB,GAAI,OACR,SAAC,KAAQ,CACPoB,YAAaR,EACbS,kBAAmBb,EAEnBR,KAAMA,EACNsB,KAAMnB,aAAK,EAALA,EAAOoB,MAAK,SAACD,GAAI,OAAKA,EAAKjC,KAAOW,EAAKE,MAAM,KAF9CF,EAAKX,GAGV,SAKd,C","sources":["webpack:///./pages/Todos/Todos.module.scss?75a6","webpack:///./utils/getElementCoords.ts","webpack:///./pages/Todos/Todos.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"todos_container\":\"todos_container--q0CBr\",\"completed\":\"completed--FYpsz\",\"non_completed\":\"non_completed--j6caz\",\"list_header\":\"list_header--pQKEM\"};","export default function (id: string) {\n  const coords = document\n    .getElementsByClassName(id)[0]\n    ?.getBoundingClientRect();\n  return coords && coords;\n}\n","import { Typography } from \"antd\";\nimport { ITodo } from \"../../models/ITodo\";\nimport { useEffect, useState } from \"react\";\nimport { todosAPI } from \"../../servises/TodosServise\";\n\nimport classes from \"./Todos.module.scss\";\nimport { usersAPI } from \"../../servises/UsersServise\";\nimport { TodoItem } from \"components\";\nimport getElementCoords from \"utils/getElementCoords\";\n\nconst Todos = () => {\n  const { data: todosData } = todosAPI.useFetchTodosQuery(null);\n\n  const usersId = todosData?.reduce(\n    (reduser: number[], todo) =>\n      reduser.includes(todo.userId) ? reduser : [...reduser, todo.userId],\n    [],\n  );\n  const { data: users } = usersAPI.useFetchUserdByIdQuery(usersId);\n\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  let nonCompletedSize = getElementCoords(classes.non_completed);\n  let completedSize = getElementCoords(classes.completed);\n\n  useEffect(() => {\n    todosData && setTodos(todosData);\n  }, [todosData]);\n\n  useEffect(() => {\n    nonCompletedSize = getElementCoords(classes.non_completed);\n    completedSize = getElementCoords(classes.completed);\n  }, []);\n\n  function chageComplete(id: number) {\n    const newTodos = [...todos];\n    newTodos[id - 1] = {\n      ...newTodos[id - 1],\n      completed: !newTodos[id - 1].completed,\n    };\n    setTodos(newTodos);\n  }\n\n  return (\n    <div className={classes.todos_container}>\n      <div className={classes.non_completed}>\n        <Typography.Title level={4} className={classes.list_header}>\n          Non completed\n        </Typography.Title>\n        {todos\n          ?.filter(({ completed }) => !completed)\n          .map((todo) => (\n            <TodoItem\n              changeColum={chageComplete}\n              oppositColumCoord={completedSize}\n              key={todo.id}\n              todo={todo}\n              user={users?.find((user) => user.id === todo.userId)}\n            />\n          ))}\n      </div>\n      <div className={classes.completed}>\n        <Typography.Title level={4} className={classes.list_header}>\n          Completed\n        </Typography.Title>\n        {todos\n          ?.filter(({ completed }) => completed)\n          .map((todo) => (\n            <TodoItem\n              changeColum={chageComplete}\n              oppositColumCoord={nonCompletedSize}\n              key={todo.id}\n              todo={todo}\n              user={users?.find((user) => user.id === todo.userId)}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Todos;\n"],"names":["id","coords","document","getElementsByClassName","getBoundingClientRect","todosData","todosAPI","data","usersId","reduce","reduser","todo","includes","userId","users","usersAPI","useState","todos","setTodos","nonCompletedSize","getElementCoords","classes","completedSize","chageComplete","newTodos","completed","useEffect","className","level","filter","map","changeColum","oppositColumCoord","user","find"],"sourceRoot":""}