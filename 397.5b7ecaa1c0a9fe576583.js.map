{"version":3,"file":"397.5b7ecaa1c0a9fe576583.js","mappings":";uKAMaA,EAAW,SAAH,GAMf,IALJC,EAAK,EAALA,MACAC,EAAQ,EAARA,SAaA,OAAO,IAAIC,SAA2B,SAACC,EAASC,GAC9CC,YAAW,WAlBW,UAmBGL,GAnBgB,UAmBeC,EACpDE,EAAQ,CAAEG,KAAM,SAEhBF,EAAO,IAAIG,MAAM,2BAErB,GAAG,IACL,GACF,+PC7BA,8hGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+XAIO,cCqBP,EApBsB,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,KACjB,GAA6BC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,WAAW,IAAhEC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAEnB,OACE,gBAAKC,UCVwB,wBDUU,UACrC,iBAAKA,UCX0D,mBDW7B,WAChC,SAAC,UAAgB,CAACA,UCZqE,cDY5CC,MAAO,EAAE,qBAGpD,SAAC,KAAQ,CACPC,SAAU,SAACC,GAAU,OAAKV,EDXlC,SAACU,GAAuB,sBAL1B,EAK0B,GAL1B,EAK0B,UAAK,WAAOV,GAAqB,uEAEV,OAFU,SAErDA,EAASW,EAAAA,EAAAA,QAAAA,gBAAkC,SACpBrB,EAASoB,GAAW,OAArCE,EAAW,EAAH,KACdZ,EAASW,EAAAA,EAAAA,QAAAA,oBAAsCC,EAASf,OAAO,gDAE/DG,EAASW,EAAAA,EAAAA,QAAAA,kBAAoC,KAAEE,UAAU,wDAX/D,+KAaG,mDARuB,EAQvB,CCG0CC,CAAUJ,GAAY,EACzDL,UAAWA,EACXC,MAAOA,QAKjB","sources":["webpack:///./api/auth.ts","webpack:///./store/actionsCreators/fetchAuth.ts","webpack:///./pages/Authorization/Authorization.tsx","webpack:///./pages/Authorization/Authorization.module.scss?0b53"],"sourcesContent":["import axios from \"axios\";\n\nconst basePath = \"https://jsonplaceholder.typicode.com/\";\n\nconst fakeAuth = { login: \"admin\", password: \"admin\" };\n\nexport const getToken = ({\n  login,\n  password,\n}: {\n  login: string;\n  password: string;\n}) => {\n  const config = {\n    data: {\n      login,\n      password,\n    },\n  };\n\n  // return  axios.get(basePath + \"auth\", config);\n  return new Promise<{ data?: string }>((resolve, reject) => {\n    setTimeout(() => {\n      if (fakeAuth.login === login && fakeAuth.password === password) {\n        resolve({ data: \"true\" });\n      } else {\n        reject(new Error(\"Wrong login or password\"));\n      }\n    }, 3000);\n  });\n};\n","import { getToken } from \"api/auth\";\nimport { IAuthParams } from \"../../models/IAuthParams\";\nimport { AppDispatch } from \"store/StoredProvider\";\nimport { authSlise } from \"../redusers/AuthSlise\";\n\nexport const fetchAuth =\n  (authParams: IAuthParams) => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(authSlise.actions.authFetching());\n      const response = await getToken(authParams);\n      dispatch(authSlise.actions.authFetchingSuccess(response.data));\n    } catch (e) {\n      dispatch(authSlise.actions.authFetchingError(e.message));\n    }\n  };\n","import { Typography } from \"antd\";\nimport { AuthForm } from \"components\";\nimport { useAppDispach, useAppSelector } from \"../../hooks/redux\";\nimport { fetchAuth } from \"../../store/actionsCreators/fetchAuth\";\nimport classes from \"./Authorization.module.scss\";\n\nconst Authorization = () => {\n  const dispatch = useAppDispach();\n  const { isLoading, error } = useAppSelector((state) => state.authReduser);\n\n  return (\n    <div className={classes.auth_container}>\n      <div className={classes.auth_wrap}>\n        <Typography.Title className={classes.logo} level={4}>\n          \"Logo\"\n        </Typography.Title>\n        <AuthForm\n          onFinish={(authParams) => dispatch(fetchAuth(authParams))}\n          isLoading={isLoading}\n          error={error}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Authorization;\n","// extracted by mini-css-extract-plugin\nexport default {\"auth_container\":\"auth_container--I7lPi\",\"auth_wrap\":\"auth_wrap--g7iMB\",\"logo\":\"logo--r1bkz\"};"],"names":["getToken","login","password","Promise","resolve","reject","setTimeout","data","Error","i","dispatch","useAppDispach","useAppSelector","state","authReduser","isLoading","error","className","level","onFinish","authParams","authSlise","response","message","fetchAuth"],"sourceRoot":""}