{"version":3,"file":"336.c9db7a9e7e34c2d79988.js","mappings":"imBASA,IA6CA,EA7Ce,WACb,I,IAAsC,G,GAAZA,EAAAA,EAAAA,UAAS,I,EAAG,E,miBAA/BC,EAAK,KAAEC,EAAQ,KACRC,EAAWC,EAAAA,EAAAA,6BAAuC,CAC9DH,MAAAA,EACAI,KAAM,IAFAC,KAKFC,EAAUJ,aAAM,EAANA,EAAQK,QACtB,SAACC,EAAmBC,GAAK,OACvBD,EAAQE,SAASD,EAAME,QAAUH,EAAU,GAAH,O,yWAAA,CAAOA,GAAO,CAAEC,EAAME,QAAO,GACvE,IAEYC,EAAUC,EAAAA,EAAAA,uBAAgCP,GAAhDD,KAER,OACE,iBAAKS,UCvB0B,0BDuBU,UACtCZ,IACC,SAAC,IAAc,CACba,WAAYb,EAAOc,OACnBC,KAAM,WACJhB,GAAS,SAACiB,GAAI,OAAKA,EAAO,EAAE,GAC9B,EACAC,SAAS,EACTC,OAAQ,KAAK,UAEb,SAAC,KAAI,CACHC,KAAK,QACLC,WAAYpB,EACZqB,WAAY,SAACd,GAAK,OAChB,SAAC,KAAS,CACRA,MAAOA,EAEPe,KAAMZ,aAAK,EAALA,EAAOa,MAAK,SAACD,GAAI,OAAKA,EAAKE,KAAOjB,EAAME,MAAM,KAD/CF,EAAMiB,GAEX,OAKV,SAAC,UAAgB,CAACC,MAAO,EAAGb,UC9CoC,gBD8CV,6BAK5D,C","sources":["webpack:///./pages/Albums/Albums.tsx","webpack:///./pages/Albums/Albums.module.scss?13b4"],"sourcesContent":["import { useState } from \"react\";\nimport { List, Typography } from \"antd\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { albumsAPI } from \"../../servises/AlbomsServise\";\nimport { usersAPI } from \"../../servises/UsersServise\";\n\nimport classes from \"./Albums.module.scss\";\nimport { AlbumItem } from \"components\";\n\nconst Albums = () => {\n  const [limit, setLimit] = useState(10);\n  const { data: albums } = albumsAPI.useFetchLimitPageAlbomsQuery({\n    limit,\n    page: 1,\n  });\n\n  const usersId = albums?.reduce(\n    (reduser: number[], album) =>\n      reduser.includes(album.userId) ? reduser : [...reduser, album.userId],\n    [],\n  );\n  const { data: users } = usersAPI.useFetchUserdByIdQuery(usersId);\n\n  return (\n    <div className={classes.albums_container}>\n      {albums && (\n        <InfiniteScroll\n          dataLength={albums.length}\n          next={() => {\n            setLimit((prev) => prev + 10);\n          }}\n          hasMore={true}\n          loader={null}\n        >\n          <List\n            size=\"large\"\n            dataSource={albums}\n            renderItem={(album) => (\n              <AlbumItem\n                album={album}\n                key={album.id}\n                user={users?.find((user) => user.id === album.userId)}\n              />\n            )}\n          />\n        </InfiniteScroll>\n      )}\n      <Typography.Title level={4} className={classes.footer}>\n        End of Albums\n      </Typography.Title>\n    </div>\n  );\n};\n\nexport default Albums;\n","// extracted by mini-css-extract-plugin\nexport default {\"albums_container\":\"albums_container--EpPsa\",\"footer\":\"footer--liLtA\"};"],"names":["useState","limit","setLimit","albums","albumsAPI","page","data","usersId","reduce","reduser","album","includes","userId","users","usersAPI","className","dataLength","length","next","prev","hasMore","loader","size","dataSource","renderItem","user","find","id","level"],"sourceRoot":""}